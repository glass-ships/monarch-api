name: Test Backend

on:
  pull_request:
  workflow_dispatch:

# defaults:
#   run:
#     working-directory: ./backend

jobs:
  test-backend:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: [ubuntu-latest]
        #os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      #----------------------------------------------
      #        set up ssh tunnel for solr
      #----------------------------------------------
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.JSON_GCLOUD_SERVICE_ACCOUNT_JSON }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          version: ">= 447.0.0"

#      - name: "Cache SSH Key"
#        uses: actions/cache@v3
#        with:
#          path: |
#            ~/.ssh/google_compute_engine
#            ~/.ssh/google_compute_engine.pub
#          key: ${{ runner.os }}-ssh-key
#
#      - name: "Remove old SSH keys"
#        run: |
#          if [[ $(gcloud compute os-login ssh-keys list | grep -v FINGERPRINT) ]]; then
#            for i in $(gcloud compute os-login ssh-keys list | grep -v FINGERPRINT)
#            do
#              echo $i
#              gcloud compute os-login ssh-keys remove --key $i
#            done
#          fi

      - name: "Make SSH Tunnel for Solr"
        run: |
          gcloud compute ssh --ssh-key-expiration 60m --zone us-central1-a monarch-v3-dev-solr -- -f -NL 8983:localhost:8983

      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1

      #----------------------------------------------
      #    install your root project, if required
      #----------------------------------------------
      - name: Install library
        run: poetry -C backend install --no-interaction

      #----------------------------------------------
      #              run pytest
      #----------------------------------------------
      - name: Run tests
        run: poetry -C backend run pytest backend/tests
