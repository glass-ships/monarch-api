name: Test Frontend

on: pull_request

env:
  CACHE_PATH: |
    ~/.cache/ms-playwright
    frontend/node_modules

defaults:
  run:
    working-directory: ./frontend

jobs:
  # install cache for rest of jobs
  install-cache:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Define cache key
        id: define-key
        run: echo "key=bun-${{ hashFiles('frontend/bun.lockb') }}" >> $GITHUB_OUTPUT

      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1

      - uses: actions/cache/restore@v4
        id: restore-cache
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ steps.define-key.outputs.key }}

      - name: Install packages
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: bun install

      - name: Install Playwright
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: bunx playwright install

      - name: Save cache
        if: steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ steps.define-key.outputs.key }}

    outputs:
      cache-key: ${{ steps.define-key.outputs.key }}

  # test that app can build without issues
  test-build:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}

      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Run test
        run: bun run build

  # test that app has no typescript errors
  test-types:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}

      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Run test
        run: bun run test:types

  # test that app is properly formatted and linted
  test-lint:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}

      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Run test
        run: bun run test:lint

  # run unit tests
  test-unit:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}

      - name: Run test
        run: bun run test:unit

  # run end to end integration tests
  test-e2e:
    runs-on: ubuntu-latest
    needs: install-cache
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Restore cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ needs.install-cache.outputs.cache-key }}

      - if: runner.debug == '1'
        uses: mxschmitt/action-tmate@v3

      - name: Run test
        run: bun run test:e2e
