upstream api {
    server api:8000;
}
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    server_name  _;

    location / {
        root /var/www;
        index index.html;
        try_files $uri /index.html;
    }

    # redirect requests incorrectly made to /api/blah to /v3/api/blah
    location ~ ^(/api) {
        # nginx's default behavior (absolute_redirect: on) is to construct and
        # send back a full URL when redirecting, but we just need a relative
        # redirect to the same origin, so i've turned off absolute_redirect.
        # since it's running in a container it's not necessarily aware of how to
        # construct the full URL anyway.
        absolute_redirect off;

        return 302 /v3$request_uri;
    }

    # redirect /<category>/<curie> to /<curie>
    location ~^/(gene|disease|phenotype|anatomy|pathway)/([^/:]:[^/:])$ {
        absolute_redirect off;
        return 301 /$2;
    }

    location ~ ^(/openapi.json$|/v3/) {
        # proxy requests to upstream api
        proxy_pass http://api;

        # pass request headers to upstream
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # upgrade http
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}
